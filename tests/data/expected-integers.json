{
  "name": "IntegerModel",
  "signature": "IntegerModel(*, a: int, b: int, c: int, d: int)",
  "docstring": "Integer model for testing.\n\n.. rubric:: Parameters\n\n- **a (int)** - A number A\n- **b (int)** - A number B\n- **c (int)** - A number C\n- **d (int)** - A number D\n\n.. rubric:: Intermediates\n\n- **ret_1 (int)** - Results a + b\n- **ret_2 (int)** - Results c - d\n\n.. rubric:: Returns\n\n- **ret_3 (int)** - Result total of step_1 and step_2\n\n.. rubric:: Steps\n\n1) **_step_1** - Add a and b together.\n2) **_step_2** - Subtract d from c\n3) **_step_3** - Add total of steps 1 and 2.\n\n",
  "instantiation": {
    "parameter.a": 1,
    "parameter.b": 1,
    "parameter.c": 2,
    "parameter.d": 2
  },
  "steps": {
    "_step_1": {
      "name": "_step_1",
      "method_name": "_step_1",
      "docstring": "Add a and b together.",
      "uses": [
        "parameter.a",
        "parameter.b"
      ],
      "impacts": [
        "intermediate.ret_1"
      ],
      "output": {
        "intermediate.ret_1": 2
      },
      "metadata": {}
    },
    "_step_2": {
      "name": "_step_2",
      "method_name": "_step_2",
      "docstring": "Subtract d from c",
      "uses": [
        "parameter.c",
        "parameter.d"
      ],
      "impacts": [
        "intermediate.ret_2"
      ],
      "output": {
        "intermediate.ret_2": 0
      },
      "metadata": {}
    },
    "_step_3": {
      "name": "_step_3",
      "method_name": "_step_3",
      "docstring": "Add total of steps 1 and 2.",
      "uses": [
        "intermediate.ret_1",
        "intermediate.ret_2"
      ],
      "impacts": [
        "return.ret_3"
      ],
      "output": {
        "return.ret_3": 2
      },
      "metadata": {}
    }
  },
  "output": {
    "ret_3": 2
  },
  "config": {
    "show_signature": true,
    "show_docstring": true,
    "show_steps": true,
    "step_config": {
      "show_method_name": true,
      "show_docstring": true,
      "show_uses": true,
      "show_impacts": true,
      "show_output": true,
      "show_metadata": true
    }
  }
}
