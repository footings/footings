name: tests

on:
  push:
    branches: [dev, main]
  pull_request:
    branches: [dev, main]

jobs:
  pre-commit:
    name: pre-commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: 3.7
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - uses: pre-commit/action@v2.0.0
  tests:
    name: "Python ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
        os: [ubuntu-latest, windows-latest] # macOS-latest,
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Install pipx
        run: |
          if [ "$RUNNER_OS" == "Windows" ]; then
               python -m pip install pipx
          else
               python3 -m pip install pipx
          fi
      - name: Install poetry, nox
        run: |
          pipx install poetry
          pipx install nox
      - name: Install footings
        run: |
          poetry install
      - name: Poetry show libraries
        run: |
          poetry show
      - name: Pip show footings
        run: |
          poetry run pip show footings
      - name: Run tests
        run:  nox -s run_tests
  coverage:
    needs: [tests]
    name: Run coverage
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install pipx
        run: |
          python3 -m pip install pipx
      - name: Install poetry, nox
        run: |
          pipx install poetry
          pipx install nox
      - name: Install footings
        run: |
          poetry install
      - name: Poetry show libraries
        run: |
          poetry show
      - name: Pip show footings
        run: |
          poetry run pip show footings
      - name: Run coverage
        run:  nox -s run_coverage
